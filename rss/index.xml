<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[100 things to do with Red Hat Management Products]]></title><description><![CDATA[A series of blogs and videos about the cool things you can do with Red Hat (Systems) Management products ]]></description><link>http://100things.wzzrd.com</link><image><url>blog_cover.png</url><title>100 things to do with Red Hat Management Products</title><link>http://100things.wzzrd.com</link></image><generator>RSS for Node</generator><lastBuildDate>Wed, 27 Jun 2018 11:52:43 GMT</lastBuildDate><atom:link href="http://100things.wzzrd.com/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Using the ovirt_vms module with cloud_init]]></title><description><![CDATA[<div class="paragraph">
<p>A quick blog today. I&#8217;ve been wrestling with the ovirt_vms module in Ansible 2.5. I wanted to deploy a RHEL VM from a template on a RHV 4.1 cluster and use cloud-init to customize the VM.</p>
</div>
<div class="paragraph">
<p>The ovirt_vms module offers a cloud_init option that takes a custom_script parameter. According to the docs, you can feed this parameter your script like so:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>- name: create VM
  ovirt_vms:
    name: myvm
    auth: "{{ ovirt_auth}}"
    [...] [etc...]
    wait: yes
    cloud_init:
      custom_script: |
        write_files:
        - path: /tmp/my-userdata.sh
          permissions: '0755'
          content: |
            #!/bin/bash
            echo "foo"</pre>
</div>
</div>
<div class="paragraph">
<p>What this does not tell you, is that this userdata is never touched if you just drop it in the playbook like this. I mean, it makes sense, because you have to tell cloud-init to do something with the script, but the ovirt_vms documentation doesn&#8217;t tell you how to do that. Therefore, the <code>/tmp/my-userdata.sh</code> script will be created, but it will not be executed.</p>
</div>
<div class="paragraph">
<p>After some experimenting, it turns out you have to pass the custom_script parameter a second statement after <code>write_files</code>. You need to pass it <code>runcmd</code>.</p>
</div>
<div class="paragraph">
<p>So if anyone is stumbling across this like I did, here&#8217;s how to make your cloud-init work with ovirt_vms:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>- name: create VM
  ovirt_vms:
    name: myvm
    auth: "{{ ovirt_auth}}"
    [...] [etc...]
    wait: yes
    cloud_init:
      custom_script: |
        write_files:
        - path: /tmp/my-userdata.sh
          permissions: '0755'
          content: |
            #!/bin/bash
            echo "foo"
        runcmd:
        - /tmp/my-userdata.sh</pre>
</div>
</div>
<div class="paragraph">
<p>This may be obvious if you write cloud-init things all day, but I don&#8217;t usually spend much time doing that :)</p>
</div>]]></description><link>http://100things.wzzrd.com/2018/04/10/Using-the-ovirt-vms-module-with-cloud-init.html</link><guid isPermaLink="true">http://100things.wzzrd.com/2018/04/10/Using-the-ovirt-vms-module-with-cloud-init.html</guid><category><![CDATA[ansible]]></category><category><![CDATA[rhv]]></category><category><![CDATA[ovirt]]></category><category><![CDATA[cloud-init]]></category><dc:creator><![CDATA[Maxim Burgerhout]]></dc:creator><pubDate>Tue, 10 Apr 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[Fencing RHV or oVirt nested hypervisors]]></title><description><![CDATA[<div class="sect1">
<h2 id="_my_setup">My setup</h2>
<div class="sectionbody">
<div class="paragraph">
<p>I have this nice AMD Ryzen ThreadRipper, with 64GiB or RAM. What I want to do is run RHV 4.1 in virtual machines, and be able to play around with nested virtualization, HA and fencing.</p>
</div>
<div class="paragraph">
<p>Problem is, that my virtual machines will live on libvirt, and VMs on libvirt do not have IPMI interfaces.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_the_solution">The solution</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Enter virtualbmc! Stemming from the OpenStack project, virtualbmc is a small Python program that allows you to connect a virtual BMC interface to some of your VMs.</p>
</div>
<div class="paragraph">
<p>The way it works, is as follows:</p>
</div>
<div class="paragraph">
<p>You enable my copr, like njah:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code>$ sudo dnf copr enable wzzrd/virtualbmc</code></pre>
</div>
</div>
<div class="paragraph">
<p>and then you install the actual program, like njah:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code>sudo dnf install python2-virtualbmc python-virtualbmc-doc</code></pre>
</div>
</div>
<div class="paragraph">
<p>Virtualbmc will create a virtual BMC device for each VM you configure it for. If you, like me, want to have all BMC interfaces on the gateway of your virtual network, you need to choose a unique port for each virtual BMC interface. More below.</p>
</div>
<div class="sect2">
<h3 id="_configuring_virtualbmc">Configuring virtualbmc</h3>
<div class="paragraph">
<p>Now you have to add virtual BMC interfaces to the VMs you want to control. For this, you need to pass the name of your VM, an address to bind to (optionally), a port to listen on, and a username and password to control the BMC.</p>
</div>
<div class="paragraph">
<p>As said, I want all virtual BMCs to live on my virtual network gateway, 192.168.122.1, so I create the virtual BMC devices like njah:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code>$ sudo vbmc add rhv-node-01.deployment6.lan --address 192.168.122.1 --port 7001 --username root --password foobar
$ sudo vbmc add rhv-node-02.deployment6.lan --address 192.168.122.1 --port 7001 --username root --password foobar</code></pre>
</div>
</div>
<div class="paragraph">
<p>My hypervisor VMs (the so-called L1 machines), are obviously called rhv-node-01.deployment6.lan and rhv-node-02.deployment6.lan.</p>
</div>
</div>
<div class="sect2">
<h3 id="_starting_the_virtual_bmcs">Starting the virtual BMCs</h3>
<div class="paragraph">
<p>After creating the interfaces, we can see them, like njah:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code>$ sudo vbmc list
+-----------------------------+--------+---------------+------+
|         Domain name         | Status |    Address    | Port |
+-----------------------------+--------+---------------+------+
| rhv-node-01.deployment6.lan |  down  | 192.168.122.1 | 7001 |
| rhv-node-02.deployment6.lan |  down  | 192.168.122.1 | 7002 |
+-----------------------------+--------+---------------+------+</code></pre>
</div>
</div>
<div class="paragraph">
<p>And we can then start them to be used in RHV:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code>sudo vbmc start rhv-node-01.deployment6.lan
sudo vbmc start rhv-node-02.deployment6.lan</code></pre>
</div>
</div>
<div class="paragraph">
<p>Which gives us njah:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code>$ sudo vbmc list
+-----------------------------+--------+------------------+------+
|         Domain name         |   Status  |    Address    | Port |
+-----------------------------+-----------+---------------+------+
| rhv-node-01.deployment6.lan |  running  | 192.168.122.1 | 7001 |
| rhv-node-02.deployment6.lan |  running  | 192.168.122.1 | 7002 |
+-----------------------------+--------+------------------+------+</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_configuring_power_management_for_the_rhv_nodes">Configuring power management for the RHV nodes</h3>
<div class="paragraph">
<p>Now, start your VMs, and in RHVM, go into the power management interface for each hypervisor, and do the following:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Add a power management interface of type IPMILAN.</p>
</li>
<li>
<p>As the IP, pass the 192.168.122.1 the we used above (or your equivalent)</p>
</li>
<li>
<p>As the username and password, pass the values we used above</p>
</li>
<li>
<p>Now here comes the tricky bit: in the options field, for each hypervisor, add:</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>ipport=7001,lanplus=1</pre>
</div>
</div>
<div class="paragraph">
<p>Change the port to reflect the port you have configured for this VM.</p>
</div>
<div class="paragraph">
<p>It took me quite a bit of time to figure out the right options here. Hope this saves someone else a bunch of time!</p>
</div>
<div class="paragraph">
<p>Happy testing!</p>
</div>
</div>
</div>
</div>]]></description><link>http://100things.wzzrd.com/2018/02/14/Fencing-RHV-or-o-Virt-nested-hypervisors.html</link><guid isPermaLink="true">http://100things.wzzrd.com/2018/02/14/Fencing-RHV-or-o-Virt-nested-hypervisors.html</guid><category><![CDATA[RHV]]></category><category><![CDATA[oVirt]]></category><category><![CDATA[fencing]]></category><category><![CDATA[virtualbmc]]></category><category><![CDATA[libvirt]]></category><dc:creator><![CDATA[Maxim Burgerhout]]></dc:creator><pubDate>Wed, 14 Feb 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[Screencasts on Linux, part 2]]></title><description><![CDATA[<div class="paragraph">
<p>A while back, I wrote a <a href="http://100things.wzzrd.com/2017/06/21/Creating-screencasts-on-Linux.html">post</a> comparing some screencasting and video editing software on Linux.</p>
</div>
<div class="paragraph">
<p>I that post, I mentioned a couple of video editing programs that are available, and basically noted that - as far as video editing is concerned - things were painful on Linux, at least for me.</p>
</div>
<div class="paragraph">
<p>Well, no more, it seems. I seem to have missed a beautiful, functional, easy to use, and relatively fast one, called <a href="https://jliljebl.github.io/flowblade/">Flowblade</a>.</p>
</div>
<div class="paragraph">
<p>I had never heard of it, and I haven&#8217;t seen it mentioned on any of the sites I looked for video editing software reviews on. I only ran into it while browsing the available Flatpaks on <a href="https://flathub.org/apps/">Flathub</a>. However, it has been in development for a couple of years, and it&#8217;s development seems active, though a bit dependent on a single coder.</p>
</div>
<div class="paragraph">
<p>Having said that, I tip my hat to that single coder, who goes by the name of <a href="https://github.com/jliljebl">jliljebl</a>, because this software is A-MA-ZING!</p>
</div>
<div class="paragraph">
<p>I&#8217;m not a professional video editor, so I&#8217;ve always struggled with other open source video editing software, and LightWorks, though good, is a bit steep for my occasional screencast editing, and not open source. (As an added problem, most of the open source video editing software crashed for me. They all crashed, all the time. That made me a sad panda.)</p>
</div>
<div class="paragraph">
<p>Flowblade, however, is easy. All the required functionality is readily available, without having to jump through hoops or having to know all kinds of funky lingo. For things that were not immediately obvious to me (again: I&#8217;m still a noob in video editing), short tutorial videos are abundant on Youtube.</p>
</div>
<div class="paragraph">
<p>All in all, if you are looking for a good, open source video editor, that&#8217;s really easy to use and does actually not crash all the time (which was a novelty as well!), take a look at Flowblade.</p>
</div>
<div class="paragraph">
<p>It&#8217;s like drinking a frothy mixture of rainbow juice and happy pills, topped with sprinkles of joy!</p>
</div>
<div class="imageblock">
<div class="content">
<img src="http://100things.wzzrd.com/images/flowblade.png" alt="flowblade">
</div>
</div>]]></description><link>http://100things.wzzrd.com/2018/02/07/Screencasts-on-Linux-part-2.html</link><guid isPermaLink="true">http://100things.wzzrd.com/2018/02/07/Screencasts-on-Linux-part-2.html</guid><category><![CDATA[video editing]]></category><category><![CDATA[open source]]></category><dc:creator><![CDATA[Maxim Burgerhout]]></dc:creator><pubDate>Wed, 07 Feb 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA["User-friendly" Windows]]></title><description><![CDATA[<div class="sect1">
<h2 id="_this_is_a_rant">This is a rant</h2>
<div class="sectionbody">
<div class="paragraph">
<p>If you are not into rants, go away now.</p>
</div>
<div class="paragraph">
<p>So for some app my kids want to use, I needed to setup Windows. And a printer. I have a Samsung M2070W, and I have had it for years. It has not always been easy to use (hell no!), but it generally works after a few kicks in the groin.</p>
</div>
<div class="paragraph">
<p>I&#8217;ve used it with my iPad, with various Android devices, and various Linux distributions. And now, I needed to set it up in Windows.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_finding_the_right_software">Finding the right software</h2>
<div class="sectionbody">
<div class="paragraph">
<p>I go to the Samung website to download drivers. Samsung seems to have sold it&#8217;s printer business to HP. I go to HP&#8217;s website. I search for my printer, and I get four different packages (one 'universal driver, one eco driver, one printer specific driver labeled 'no installer', and one printer specific driver without any additional information) I can choose from.</p>
</div>
<div class="paragraph">
<p>I don&#8217;t know which one to use, so I download them all.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_welcome_to_hell">Welcome to hell</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Now here&#8217;s the really annoying bit. No matter what I do, the drivers keep telling me there&#8217;s no printer in the network they can work with.</p>
</div>
<div class="paragraph">
<p>It&#8217;s basically a repetition of 'nope, no printers here', in, in the best case: 'hey, there&#8217;s a printer here, oh wait no there isn&#8217;t, oh wait yes there is, but I cannot use it'.</p>
</div>
<div class="paragraph">
<p>I can open the printer&#8217;s management page in my browser, I can connect to it through the app, but any and all drivers keep telling me 'nope, no printers here, move along', or something along the lines of 'device cannot be identified'.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_force_install">Force install!</h2>
<div class="sectionbody">
<div class="paragraph">
<p>As the final resort, I told it to skip detecting the printer, and just install what I told it to install.</p>
</div>
<div class="paragraph">
<p>Want to know how that went? Driver got installed, I went to the 'add printer' page, and search for a printer. A printer is found just fine, but Windows then tells me 'driver unavaible' and we&#8217;re back to square one.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_the_solution_snm_f_ing_p">The solution: SNM-f***ing-P</h2>
<div class="sectionbody">
<div class="paragraph">
<p>I kid you not. You know what needed to be done on the printer to finally enable using it through Windows, in a semi-stable fashion? Enable SNMP on it. I turned that off at some point, I think (or maybe it&#8217;s not on by default, I don&#8217;t know), but without SNMP, no printer detection on Windows. It works fine on Android and iOS and on Linux, but not on Windows. FFS.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_microsoft_s_fault">Microsoft&#8217;s fault?</h2>
<div class="sectionbody">
<div class="paragraph">
<p>I don&#8217;t know. This driver mess is probably more Samsung&#8217;s than Microsoft&#8217;s fault, I guess. Unless you count the fact that many devices need vendor drivers to begin with, because Windows doesn&#8217;t ship with them.</p>
</div>
<div class="paragraph">
<p>Well anyway, luckily, Linux seems to identify and use my printer just fine. With or without SNMP on the printer. Now where&#8217;s that reboot button&#8230;&#8203;</p>
</div>
</div>
</div>]]></description><link>http://100things.wzzrd.com/2018/01/28/User-friendly-Windows.html</link><guid isPermaLink="true">http://100things.wzzrd.com/2018/01/28/User-friendly-Windows.html</guid><category><![CDATA[Windows]]></category><category><![CDATA[Printing]]></category><category><![CDATA[DriverHell]]></category><dc:creator><![CDATA[Maxim Burgerhout]]></dc:creator><pubDate>Sun, 28 Jan 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[Having fun contributing to open source]]></title><description><![CDATA[<div class="paragraph">
<p>(This blog was first published on LinkedIn.)</p>
</div>
<div class="paragraph">
<p>Here&#8217;s something I&#8217;m a little bit proud of: I have written an actual feature for Satellite 6, and that feature was merged today!</p>
</div>
<div class="paragraph">
<p>As you might know, Satellite 6&#8217;s upstream is in a combination of multiple products, most notably Katello and Foreman. There is a bit of client side tooling that goes with Katello and Foreman called katello-client-bootstrap.</p>
</div>
<div class="paragraph">
<p>Katello-client-bootstrap is a Python script called bootstrap.py that makes it easy to connect existing systems to Katello and Foreman (and thus Satellite 6), which is why it is shipped as part of the official product.</p>
</div>
<div class="paragraph">
<p>Over the past couple of months, I&#8217;ve been working with Satellite product management and engineering (specifically Rich Jerrido and Evgeni Golov) to get a patch I&#8217;ve written merged into that script.</p>
</div>
<div class="paragraph">
<p>This <a href="https://github.com/Katello/katello-client-bootstrap/pull/227">patch</a> makes it possible to move an existing system from one internal or external Capsule to another (within the same infrastructure), without loosing it&#8217;s subscription or other configuration options. It&#8217;s part of the new 1.5.0 version of katello-client-bootstrap that was <a href="http://www.outsidaz.org/2018/01/23/katello-client-bootstrap-1-5-0-released/">released</a> today.</p>
</div>
<div class="paragraph">
<p>Of course, I&#8217;m very happy to re-enforce my hacker credibility, and talk about that, but I mainly wanted to write this article to share some of the experiences related to writing a feature / patch for an open source project and what it takes to get it merged.</p>
</div>
<div class="paragraph">
<p>In the category "things I have learned while contributing to open source", we have:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Don&#8217;t be afraid to start from scratch if your code doesn&#8217;t fit the master branch anymore, or has suffered from other forms of bit rot. Sometimes, it&#8217;s easier to start over than to try and mash your changes into a vastly changed master branch.</p>
</li>
<li>
<p>Don&#8217;t give up. I started this patch set in March of 2017, and I started over from scratch in the Fall of 2017. Along the way, I had to incorporate a million comments. In the end though, getting feedback is what open source is all about, and everyone just wants what is best for the project. Just keep pushing forward. Listen to the feedback. You&#8217;ll get there.</p>
</li>
<li>
<p>Talk to the project maintainers. This was relatively easy for me, because I personally know the people who maintain katello-bootstrap-client, but still, it&#8217;s important to explain what it is you are trying to get merged, why your code behaves the way it does, etc. This makes it a lot easier to get people to review your pull request and give you valuable feedback.</p>
</li>
<li>
<p>Learn git. In this day and ago, git is the tool for version control. If you want to contribute to any project whatsoever, you need to learn git. Learn branching, rebasing, squashing and writing decent commit messages (see #3).</p>
</li>
<li>
<p>Finally, adhere to the project&#8217;s coding standards, and use the project&#8217;s testing framework, preferably before you commit. In my case, just running the 'pep8' tool on my code helped a lot in making the Travis CI tool happy.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>But above all: have fun! Contributing to open source can be very rewarding, and it&#8217;s a fun way to do something different outside of your normal, everyday routine :)</p>
</div>
<div class="paragraph">
<p>This was not my first patch to an open source project, but I think it was a fairly significant one. I&#8217;m looking forward to merging more in the future! :)</p>
</div>
<div class="paragraph">
<p>A video with an overview and demo of the new feature is available on YouTube:</p>
</div>
<div class="videoblock">
<div class="content">
<iframe src="https://www.youtube.com/embed/h-wonjChaxI?rel=0" frameborder="0" allowfullscreen></iframe>
</div>
</div>]]></description><link>http://100things.wzzrd.com/2018/01/28/Having-fun-contributing-to-open-source.html</link><guid isPermaLink="true">http://100things.wzzrd.com/2018/01/28/Having-fun-contributing-to-open-source.html</guid><category><![CDATA[opensource]]></category><category><![CDATA[satellite6]]></category><category><![CDATA[lifeatredhat]]></category><category><![CDATA[katello-client-bootstrap]]></category><category><![CDATA[youtube]]></category><dc:creator><![CDATA[Maxim Burgerhout]]></dc:creator><pubDate>Sun, 28 Jan 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[Command Line Heroes]]></title><description><![CDATA[<div class="paragraph">
<p>I&#8217;ve been looking forward to this for quite a while, ever since it was announced: today, the first two episodes of Command Line Heroes were published. Command Line Heroes, or CLH for short, is a series of podcasts that tells the stories of open source. It&#8217;s hosted by Saron Yitbarek, of CodeNewbie fame, and sponsored by Red Hat.</p>
</div>
<div class="paragraph">
<p>The podcast is not about how to create an alias in Bash, or how to generate a CSR with openssl. It is about the history of Linux, open source, devops and cloud.</p>
</div>
<div class="paragraph">
<p>If you&#8217;re a geek, a hacker, a developer, a programmer, or any other sort of passionat open source builder, maker, or user, you&#8217;ll definitely want to look into this.</p>
</div>
<div class="paragraph">
<p>The first episode is about the OS wars of the 80s and how Linux came to be. I&#8217;m listening to it right now, and it&#8217;s worth every second :)</p>
</div>
<div class="paragraph">
<p>You can sign up for the newletter around Command Line Heroes <a href="https://www.redhat.com/en/command-line-heroes">here</a>, or just pull the <a href="https://feeds.pacific-content.com/commandlineheroes">RSS feed</a> into your favorite podcast client.</p>
</div>]]></description><link>http://100things.wzzrd.com/2018/01/16/Command-Line-Heroes.html</link><guid isPermaLink="true">http://100things.wzzrd.com/2018/01/16/Command-Line-Heroes.html</guid><category><![CDATA[podcast]]></category><category><![CDATA[open source]]></category><category><![CDATA[red hat]]></category><category><![CDATA[WomenInTech]]></category><dc:creator><![CDATA[Maxim Burgerhout]]></dc:creator><pubDate>Tue, 16 Jan 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[Demystifying Activation Keys]]></title><description><![CDATA[<div class="paragraph">
<p>In my daily work as a solutions architect for Red Hat, I regularly talk about Satellite 6 and explain to people how activation keys work, and how to best assign subscriptions to newly created virtual or physical machines.</p>
</div>
<div class="paragraph">
<p>Setting up activation keys is not rocket science, but I have learned that there are some misunderstandings around it, and I though it would make sense to create a short video about it.</p>
</div>
<div class="paragraph">
<p>(Now, when I say "short", I mean that I have <strong>tried</strong> to keep it short, not that I have actually succeeded in doing that. The video in this case is about 10 minutes in length, which still counts as short-ish, I hope.)</p>
</div>
<div class="paragraph">
<p>If you are interested in this topic, take a look at the video below</p>
</div>
<div class="videoblock">
<div class="content">
<iframe src="https://www.youtube.com/embed/byIf3Vb8sS0?rel=0" frameborder="0" allowfullscreen></iframe>
</div>
</div>
<div class="paragraph">
<p>The video itself is based of an article written by Rich Jerrido, which you can find <a href="https://access.redhat.com/blogs/1169563/posts/2867891">here</a>. It has some more in-depth information, where the video mostly shows examples.</p>
</div>]]></description><link>http://100things.wzzrd.com/2017/07/28/Demystifying-Activation-Keys.html</link><guid isPermaLink="true">http://100things.wzzrd.com/2017/07/28/Demystifying-Activation-Keys.html</guid><category><![CDATA[satellite6]]></category><category><![CDATA[youtube]]></category><category><![CDATA[virt-who]]></category><category><![CDATA[vdc]]></category><category><![CDATA[subscriptions]]></category><category><![CDATA[activation keys]]></category><dc:creator><![CDATA[Maxim Burgerhout]]></dc:creator><pubDate>Fri, 28 Jul 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Building ipa-server for aarch64 on a Raspberry Pi 3 and CentOS7]]></title><description><![CDATA[<div class="sect2">
<h3 id="_what">What?</h3>
<div class="paragraph">
<p>I want to run IPA server (FreeIPA, IdM) on my Raspberry Pi 3. This allows me to connect Satellite servers, Ansible Tower servers and whatnot to an instance of IdM that I don&#8217;t have to setup everytime, is always running and is actually used.</p>
</div>
</div>
<div class="sect2">
<h3 id="_is_there_a_problem">Is there a problem?</h3>
<div class="paragraph">
<p>A bit. The specfile for ipa-server has a line reading <code>%ifarch x86_64 %{ix86}</code>. This will prevent building ipa-server on any platform except for x86_64. I&#8217;m not sure why this is, but it means I have to build the RPM myself. And luckily for me, it builds fine :)</p>
</div>
</div>
<div class="sect2">
<h3 id="_the_setup">The setup</h3>
<div class="paragraph">
<p>My RPi3 runs CentOS7 for aarch64, based on the image that is available for download <a href="https://www.kraxel.org/repos/images/arm64-rpi3-centos7-mainline-20160803.raw.xz">here</a>. All in all, it works pretty well, with some caveats. One of those caveats is that the standard mock RPM doesn&#8217;t provide a configuration file for aarch64.</p>
</div>
<div class="paragraph">
<p>Hence, if you want to start using mock to build RPMs on your RPi3, create a file called <code>epel-7-aarch64.cfg</code> and put the following content in it:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>config_opts['root'] = 'epel-7-aarch64'
config_opts['target_arch'] = 'aarch64'
config_opts['legal_host_arches'] = ('aarch64',)
config_opts['chroot_setup_cmd'] = 'install bash bzip2 coreutils cpio diffutils fedora-release findutils gawk gcc gcc-c++ grep gzip info make patch redhat-rpm-config rpm-build sed shadow-utils tar unzip util-linux which xz python'
config_opts['dist'] = 'el7'  # only useful for --resultdir variable subst
config_opts['extra_chroot_dirs'] = [ '/run/lock', ]
config_opts['releasever'] = '7'

config_opts['yum.conf'] = """
[main]
keepcache=0
debuglevel=1
reposdir=/dev/null
logfile=/var/log/yum.log
retries=20
obsoletes=1
gpgcheck=0
assumeyes=1
syslog_ident=mock
syslog_device=
install_weak_deps=0
metadata_expire=0

# repos

[base]
name=centos-base
baseurl=http://mirror.centos.org/altarch/$releasever/os/$basearch/
failovermethod=priority
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
       file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7-aarch64

[updates]
name=updates
baseurl=http://mirror.centos.org/altarch/$releasever/updates/$basearch/
failovermethod=priority
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
       file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7-aarch64

[extras]
name=CentOS-$releasever - Extras
baseurl=http://mirror.centos.org/altarch/$releasever/extras/$basearch/
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
       file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7-aarch64
enabled=0

[epel]
name=epel
mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=epel-7&amp;arch=aarch64
failovermethod=priority
gpgkey=file:///etc/pki/mock/RPM-GPG-KEY-EPEL-7
gpgcheck=1

[kraxel-qcom-rpi3-public]
name=kraxels qcom dragonboard / rpi3 rpms [public]
baseurl=https://www.kraxel.org/repos/qcom/
gpgcheck=0
enabled=1

[local]
name=local
baseurl=http://armpkgs.fedoraproject.org/repos/f23-build/latest/aarch64/
cost=2000
enabled=0
"""</pre>
</div>
</div>
<div class="paragraph">
<p>You really need to enable EPEL here, because that&#8217;s where mock can pull ccache from. Also, I added the kraxel repository to this a long time ago, but I can&#8217;t really remember why :)</p>
</div>
</div>
<div class="sect2">
<h3 id="_the_specfile">The specfile</h3>
<div class="paragraph">
<p>Nothing really spectacular here. Just go to <a href="http://vault.centos.org/" class="bare">http://vault.centos.org/</a> and download that latest source RPM for ipa-server. At the time of writing, this is the <a href="http://vault.centos.org/centos/7.3.1611/updates/Source/SPackages/ipa-4.4.0-14.el7.centos.7.src.rpm">latest version</a>.</p>
</div>
<div class="paragraph">
<p>Install the source RPM as an unpriviliged user and enter the newly created ~/rpmbuild/SPECS directory. Open the ipa.spec and make sure you edit the following lines.</p>
</div>
<div class="paragraph">
<p>Edit the line reading <code>%ifarch x86_64 %{ix86}</code> to read <code>%ifarch x86_64 %{ix86} aarch64</code>. In the version of the specfile I&#8217;m working with, that is line 12.</p>
</div>
<div class="paragraph">
<p>Edit the line reading <code>Release:       14%{?dist}.7</code> to read <code>Release:        14%{?dist}.7identifier</code>. I usually use <code>maxim</code> as my identifier. You need add this to distinguish your version of the resulting RPMs (e.g. ipa-client) from the version supplied by the official repositories.<sup class="footnote">[<a id="_footnoteref_1" class="footnote" href="#_footnote_1" title="View footnote.">1</a>]</sup> This is at line 46 in my specfile.</p>
</div>
<div class="paragraph">
<p>Then, finally, add a new entry in the <code>%changelog</code> section (starting at line 1551 for me). Make sure you reference the right version of the RPM. My last one looks like this:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>* Mon Jul 10 2017 Maxim Burgerhout &lt;maxim@redhat.com&gt; - 4.4.0-14.el7.centos.7maxim
- Enable ipa-server on aarch64</pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_creating_the_source_rpm">Creating the source RPM</h3>
<div class="paragraph">
<p>This part is easy. From the ~/rpmbuild/SPECS directory, just run <code>rpmbuild -bs ipa.spec</code>. An SRPM package will be available in ~/rpmbuild/SRPMS afterwards.</p>
</div>
</div>
<div class="sect2">
<h3 id="_building_the_actual_rpms">Building the actual RPMs</h3>
<div class="paragraph">
<p>We want to use mock to build our RPMs, so I would call this command. Change for your username and identifier:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>mock -r epel-7-aarch64 /home/maxim/rpmbuild/SRPMS/ipa-4.4.0-14.el7.centos.7maxim.src.rpm</pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_installing_the_results">Installing the results</h3>
<div class="paragraph">
<p>After building (which will take a while), the resulting RPMs will be available in <code>/var/lib/mock/centos-7-aarch64/result</code>. I usually go in there and run <code>sudo createrepo .</code> and then add a ipa.repo configuration file to /etc/yum.repos.d that reads:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>[ipa]
name=CentOS-$releasever - IPA
baseurl=file:///var/lib/mock/epel-7-aarch64/result
gpgcheck=0</pre>
</div>
</div>
<div class="paragraph">
<p>That allows me to use yum to install everything and solve dependencies for me.</p>
</div>
</div>
<div class="sect2">
<h3 id="_profit">Profit!</h3>
<div class="paragraph">
<p>This may not be useful for everyone, but for me, it&#8217;s great to have an FreeIPA / IdM server running on my RPi3 :)</p>
</div>
<div class="paragraph">
<p>This blog is as much for me (as I tend to forget how I built it the last time around) as it is for anyone else looking to run FreeIPA / IdM on an RPi3. Enjoy!</p>
</div>
</div>
<div id="footnotes">
<hr>
<div class="footnote" id="_footnote_1">
<a href="#_footnoteref_1">1</a>. Obviously, the version numbers you see here are specific to the version of the specfile I&#8217;m using right now.
</div>
</div>]]></description><link>http://100things.wzzrd.com/2017/07/10/Building-ipa-server-for-aarch64-on-a-Raspberry-Pi-3-and-CentO-S.html</link><guid isPermaLink="true">http://100things.wzzrd.com/2017/07/10/Building-ipa-server-for-aarch64-on-a-Raspberry-Pi-3-and-CentO-S.html</guid><category><![CDATA[centos]]></category><category><![CDATA[freeipa]]></category><category><![CDATA[idm]]></category><category><![CDATA[mock]]></category><category><![CDATA[rpm]]></category><dc:creator><![CDATA[Maxim Burgerhout]]></dc:creator><pubDate>Mon, 10 Jul 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Open source is the most important motor for innovation]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>Recently, during the OpenTechDay in Utrecht, I had the opportunity to share my passion for open source. Since I didn’t need to convince the open source audience, I decided instead to focus on the open source success story. How far have we come since the beginning and where are we going? I think we, as a community, should be proud of the huge success of open source and also its ability to capture the cloud.</p>
</div>
<div class="paragraph">
<p>Open source has a longer history than you would think. Some of the first computers from the 1960s were provided with software that could be freely customized and shared with other users. In the 1970s, the software world accelerated with the birth of the Internet, the programming language C and UNIX.</p>
</div>
<div class="paragraph">
<p>Through the GNU project by Richard Stallman and Linux from Linus Torvalds, started in the 1980s and 1990s respectively, open source became a serious alternative to proprietary software. But that isn’t all. Numerous open source projects have since been launched and the number is growing by the day.</p>
</div>
<div class="paragraph">
<p>However, open source was put down, for several decades, as the enemy of commercial software and the work of hobbyists. That image has changed dramatically and this is demonstrated by the fact that open source is now being used everywhere, from smartphones and routers to servers and complete data centers. Open source is literally the driving force behind all current and future innovations.</p>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_more_than_an_operating_system">More than an operating system</h3>
<div class="paragraph">
<p>Open source is definitely not just about software and operating systems. Virtually all modern programming languages and open standards are part of it. Yet, there are still people who think open source is not valuable in the world of public clouds. I must quickly dispel this myth, as open source is on its way to becoming the de facto standard for cloud infrastructure.</p>
</div>
<div class="paragraph">
<p>From private and public to hybrid clouds&#8201;&#8212;&#8201;open standards and technology like OpenStack and Linux containers make these environments flexibly interchangeable. Organizations are no longer hampered by the restrictions that traditional software vendors have in terms of integration or platform support. With open source, they benefit from the commitment of the dynamic community projects on which this technology is based. The innovation speed is many times higher than that of a proprietary software supplier, who develops behind closed doors with a small team of developers.</p>
</div>
</div>
<div class="sect2">
<h3 id="_embrace_the_community">Embrace the community</h3>
<div class="paragraph">
<p>Those who think they aren’t part of an open source community are likely mistaken. By using open source software, you are contributing to testing and making the project successful.</p>
</div>
<div class="paragraph">
<p>Companies also seem to increasingly realize this. By using open source software, they become part of that huge community. Together with other companies, individual developers, suppliers and partners, they all work for the same purpose: developing better technology in an open way. They can therefore participate in testing, developing and improving the software that further helps their organization.</p>
</div>
<div class="paragraph">
<p>That gets even stronger as companies use more cloud services. Building a business infrastructure on an open source foundation makes it much easier to move to a cloud or data center where open source is also the default.</p>
</div>
<div class="paragraph">
<p>I talk to companies that are busy transitioning to open source, both on premise and in the cloud on a daily basis. Obviously, these kinds of technological changes are not without challenges, but here you can count on the support of open source companies and communities.</p>
</div>
<div class="paragraph">
<p>In conclusion, I’ll say that companies can’t go around open source in the long run. For both traditional software and the cloud, it is quickly becoming the standard for rapid innovation and development. That’s an especially good reason to
start using this innovation engine right now.</p>
</div>
<div class="paragraph">
<p>This blog was also published on <a href="https://www.linkedin.com/pulse/open-source-most-important-motor-innovation-maxim-burgerhout">LinkedIn</a> and <a href="https://www.computable.nl/artikel/blogs/opensource/6050245/5260614/opensource-is-belangrijkste-motor-voor-innovatie.html">Computable</a> (in Dutch).</p>
</div>
</div>]]></description><link>http://100things.wzzrd.com/2017/07/04/Open-source-is-the-most-important-motor-for-innovation.html</link><guid isPermaLink="true">http://100things.wzzrd.com/2017/07/04/Open-source-is-the-most-important-motor-for-innovation.html</guid><category><![CDATA[Open source]]></category><dc:creator><![CDATA[Maxim Burgerhout]]></dc:creator><pubDate>Tue, 04 Jul 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Creating screencasts on Linux]]></title><description><![CDATA[<div class="sect2">
<h3 id="_intro">Intro</h3>
<div class="paragraph">
<p>As this is a new blog on Fedora Planet, let me start off by introducing myself briefly. My name is Maxim Burgerhout, and I have been a Fedora contributor for quite some time. Truth be told though, I haven&#8217;t been able to spend much time maintaining my packages over the past couple of years. As a different way of giving back, I want to start sharing some experiences with open source software in a specific niche: screencast creation, and video editing.</p>
</div>
</div>
<div class="sect2">
<h3 id="_background">Background</h3>
<div class="paragraph">
<p>A couple of months back, I started recording screencasts about Red Hat products.<sup class="footnote">[<a id="_footnoteref_1" class="footnote" href="#_footnote_1" title="View footnote.">1</a>]</sup>. For now, it&#8217;s mostly about management products, like Satellite, Ansible Tower and things like that, but I&#8217;ll potentially also cover other products and projects as they pop up in my daily work, and as said above, I intend to start sharing some experiences.<sup class="footnote">[<a id="_footnoteref_2" class="footnote" href="#_footnote_2" title="View footnote.">2</a>]</sup> about creating screencasts on Fedora.</p>
</div>
<div class="paragraph">
<p>Assuming more people are trying to figure out the same things I am, I&#8217;m starting off with a short write-up of my experiences so far, trying to work with open source software to create screencasts. Spoiler: it&#8217;s not as easy as I hoped it would be.</p>
</div>
<div class="paragraph">
<p>The below article is based on my experience using Fedora 25.</p>
</div>
</div>
<div class="sect2">
<h3 id="_recording_video">Recording video</h3>
<div class="paragraph">
<p>Ever since I started doing this, I&#8217;ve been using <a href="http://screencastify.com/">Screencastify</a> as my screen recorder of choice. I have tried using the <a href="https://extensions.gnome.org/extension/690/easyscreencast/">EasyScreencast</a> Gnome Shell extension in the beginning, but it had (temporarily) died, so that didn&#8217;t seem viable. It seems to have revived though, so I&#8217;ll probably try it again when my Screencastify subscription expires near the end of the calendar year.</p>
</div>
<div class="paragraph">
<p>I also tried the <a href="https://help.gnome.org/users/gnome-help/stable/screen-shot-record.html.en">CTRL-ALT-SHIFT-R</a> option to start a screencast recording in Gnome, but that records both my monitors, which makes editing the whole thing into a Youtube video quite a pain.<sup class="footnote">[<a id="_footnoteref_3" class="footnote" href="#_footnote_3" title="View footnote.">3</a>]</sup>.</p>
</div>
<div class="paragraph">
<p>Finally, gtk-recordmydesktop gives me all kinds of strange artifacts in my recording when I move my mouse. It also seemed to crash quite frequently, and seems to be dead upstream.</p>
</div>
<div class="paragraph">
<p>All options available from the community (the built-in one, gtk-recordmydesktop and EasyScreencast) were disqualified for various reasons, either because of lack of maintenance, quircks or instability.</p>
</div>
<div class="paragraph">
<p>However, apart from the occasional crash (which happens very seldomly), Screencastify works beautifully. I can record a window, a Chrome tab, or my whole desktop. Recording my voice over the videos also works pretty well, using a USB microphone I bought for the purpose of creating screencasts.</p>
</div>
<div class="paragraph">
<p>The downside of Screencastify is that it&#8217;s a proprietary piece of software. For now, it&#8217;s the clear winner, but in the future I&#8217;ll give EasyScreencast a go for it&#8217;s money again.</p>
</div>
</div>
<div class="sect2">
<h3 id="_recording_audio_on_it_s_own">Recording audio on it&#8217;s own</h3>
<div class="paragraph">
<p>Recording audio on Fedora can be done through various options, of which the two most obvious are <a href="https://wiki.gnome.org/Design/Apps/SoundRecorder">Sound Recorder</a> and <a href="http://www.audacityteam.org/">Audacity</a>.</p>
</div>
<div class="paragraph">
<p>Sound Recorder is the default sound recorder app in Gnome 3. It&#8217;s OK for very simple usage, but the moment you want to start editing audio or improving audio quality using filters, Sound Recorder doesn&#8217;t offer anything.</p>
</div>
<div class="paragraph">
<p>Audacity on the contrary, is <strong>very</strong> complete. It&#8217;s even a bit intimidating in the amount of options it offers, but in terms of recording quality, editing the recordings and improving their quality, Audacity is the de-facto standard in open source, on Linux as well as on various other platforms. Simply said, it&#8217;s brilliant.</p>
</div>
<div class="paragraph">
<p>Audacity is the clear winner hear, without any real competition.</p>
</div>
</div>
<div class="sect2">
<h3 id="_editing_video">Editing video</h3>
<div class="paragraph">
<p>So this is where the real pain starts. Save to say, video editing on Linux was a bit of a disappointment for me.</p>
</div>
<div class="paragraph">
<p>I have tried all of the major video editing open source projects that available natively on Fedora: Kdenlive, Pitivi, Avidemux and OpenShot, as well as the commercially available Lightworks.</p>
</div>
<div class="paragraph">
<p>To start with <a href="http://fixounet.free.fr/avidemux/">Avidemux</a>: it seems to lack the full broad spectrum of features one would need to edit and merge large amounts of clips into a new video, and insert transitions and background audio. I assume it would work nicely to just crop two videos and slam them together, but it doesn&#8217;t feel right for more complex things. Granted, I haven&#8217;t spent a huge amount with this program, so let me know if you think I&#8217;m dismissing Avidemux too easily. It just wasn&#8217;t enough for me.</p>
</div>
<div class="paragraph">
<p>Next up are <a href="http://www.openshot.org/">OpenShot</a> and <a href="https://kdenlive.org/">Kdenlive</a>. Both great programs, both with extensive feature sets that would suffice for me and both with the same continuous problem that disqualified them: they crash. Over and over. I&#8217;ll be filing bugs for both, but no matter how that turns out, right NOW, they are not very useful for me. Both seem to have somewhat lively upstreams tho, so who knows what the future might bring.</p>
</div>
<div class="paragraph">
<p>Sadly, I&#8217;ve spent too much time trying to get OpenShoft and Kdenlive to work, and that kept me from thoroughly evaluating my next contender: <a href="http://www.pitivi.org/">Pitivi</a>.</p>
</div>
<div class="paragraph">
<p>Pitivi used to fall into the same category as OpenShoft and Kdenlive (crashing), but I haven&#8217;t experienced any crashes recently. I comes with a nice set of effects, just like OpenShoft and Kdenlive, and is fairly easy to use. It exports to all of the right formats, but sadly, rendering of video happens in the foreground. This blocksyou from using the program during that process. Not a big deal for a video of a couple of minutes, but annoying for anything longer than that.</p>
</div>
<div class="paragraph">
<p>The final program I just had to take a look at, is Lightworks. It&#8217;s not open source, but it really is bloody good. It&#8217;s by far the most complete of the lot, but it comes at a hefty price. Also, some of the options that are really interesting for making screencasts, like a built-in voice-over recorder, isn&#8217;t available on Linux :(</p>
</div>
<div class="paragraph">
<p>I would say for video editing, Pitivi and Lightworks are tied, with Lightworks being the more complete option, and Pitivi being the open source one.</p>
</div>
</div>
<div class="sect2">
<h3 id="_conclusion">Conclusion</h3>
<div class="paragraph">
<p>Audio editing we have under control in open source. Audacity is great. It&#8217;s just really, really great. (There, enough Trumpianisms for today.)</p>
</div>
<div class="paragraph">
<p>Screencast recording has come a long way, but hasn&#8217;t quite reached the level of functionality I needed a couple of months back. It might have grown to that level in the meantime, though. I&#8217;ll take the time to re-evaluate EasyScreencast and post an update sometime in the Fall.</p>
</div>
<div class="paragraph">
<p>Video editing is still a bit of a problem. The commercial option is good, but pretty expensive and obviously not open source. Two of the three main contenders (OpenShot and Kdenlive) have serious stability issues, up to the point that I just gave up on them. Bugs will be filed, but that&#8217;s not helping me today. Pitivi is a little less complete than both OpenShot and Kdenlive, I think, but does show promise (and doesn&#8217;t crash that often).</p>
</div>
<div class="paragraph">
<p>As with EasyScreencast, I&#8217;ll give Pitivi as second try and hopefully find an open source solution for my video editing problem.</p>
</div>
<div class="paragraph">
<p>TL;DR if you are looking for a set of tools to record and edit screencasts on Fedora, you probably want to check out EasyScreencast, and use Screencastify as a fall-back option. For audio, there&#8217;s no way around Audacity. If you can shell out some dough and don&#8217;t mind a bit of proprietary software, go for Lightworks, otherwise Pitivi will help you overcome most video editing problems.</p>
</div>
<div class="paragraph">
<p>M</p>
</div>
</div>
<div id="footnotes">
<hr>
<div class="footnote" id="_footnote_1">
<a href="#_footnoteref_1">1</a>. I work as a solution architect for Red Hat in the Benelux region
</div>
<div class="footnote" id="_footnote_2">
<a href="#_footnoteref_2">2</a>. How-to&#8217;s, why this and not that, and who knows: screencasts ;)
</div>
<div class="footnote" id="_footnote_3">
<a href="#_footnoteref_3">3</a>. If you know who to limit this to a single monitor, or even better: a single window, I&#8217;m all ears!
</div>
</div>]]></description><link>http://100things.wzzrd.com/2017/06/21/Creating-screencasts-on-Linux.html</link><guid isPermaLink="true">http://100things.wzzrd.com/2017/06/21/Creating-screencasts-on-Linux.html</guid><category><![CDATA[screencasts]]></category><category><![CDATA[Fedora]]></category><category><![CDATA[meta]]></category><dc:creator><![CDATA[Maxim Burgerhout]]></dc:creator><pubDate>Wed, 21 Jun 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Red Hat Tech Day Demo Recordings (June 2017)]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>So last Tuesday, I presented about Red Hat&#8217;s container development kit during the Red Hat Tech Day in Utrecht (NL).</p>
</div>
<div class="paragraph">
<p>Though most of the demos succeeded eventually, they all took way longer than expected due to some network issues. I&#8217;ll be frank: that sucked.</p>
</div>
<div class="paragraph">
<p>I tried to make good on my promise to make sure everyone would be able to see these demos at their own time and pace. This morning I did some recording, I did some editing and I did some publishing. And as of now, all five demos that I planned to do are available on my YouTube channel, and you&#8217;ll find direct links to them below for convenience. There&#8217;s also a <a href="https://www.youtube.com/playlist?list=PLTJ5vj7osiGO7K70076Y4kjWgoQxfKyJd">playlist</a> on youtube.com that has all five videos in them. For binge watching ;)</p>
</div>
<div class="paragraph">
<p>Hope you enjoy and have fun trying out our awesome CDK!</p>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_direct_links_to_all_videos">Direct links to all videos</h3>
<div class="ulist">
<ul>
<li>
<p>Red Hat Tech Day NL 2017: Installing the CDK on Windows</p>
</li>
</ul>
</div>
<div class="videoblock">
<div class="content">
<iframe src="https://www.youtube.com/embed/dpVcg5lop6M?rel=0" frameborder="0" allowfullscreen></iframe>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Red Hat Tech Day NL 2017: Installing the CDK on Linux</p>
</li>
</ul>
</div>
<div class="videoblock">
<div class="content">
<iframe src="https://www.youtube.com/embed/6JLyKdGY5p4?rel=0" frameborder="0" allowfullscreen></iframe>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Red Hat Tech Day NL 2017: Using the CDK to do Java development on Windows</p>
</li>
</ul>
</div>
<div class="videoblock">
<div class="content">
<iframe src="https://www.youtube.com/embed/woOoEsk9qcg?rel=0" frameborder="0" allowfullscreen></iframe>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Red Hat Tech Day NL 2017: Using the CDK to do dotNET development on Linux</p>
</li>
</ul>
</div>
<div class="videoblock">
<div class="content">
<iframe src="https://www.youtube.com/embed/jNgzAoYqC1k?rel=0" frameborder="0" allowfullscreen></iframe>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Red Hat Tech Day NL 2017: Using the CDK to quickly test small changes</p>
</li>
</ul>
</div>
<div class="videoblock">
<div class="content">
<iframe src="https://www.youtube.com/embed/sQAkzH75YfA?rel=0" frameborder="0" allowfullscreen></iframe>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_update">Update</h3>
<div class="paragraph">
<p>Some people have asked for the json file I used to create the .NET project on the CDK I was running on Linux. I have uploaded it to this blog. You can download it <a href="https://raw.githubusercontent.com/wzzrd/hubpress.io/gh-pages/images/dotnet-important-app.json">here</a>.</p>
</div>
</div>]]></description><link>http://100things.wzzrd.com/2017/06/14/Red-Hat-Tech-Day-Demo-Recordings-June-2017.html</link><guid isPermaLink="true">http://100things.wzzrd.com/2017/06/14/Red-Hat-Tech-Day-Demo-Recordings-June-2017.html</guid><category><![CDATA[Red Hat]]></category><category><![CDATA[CDK]]></category><category><![CDATA[OpenShift]]></category><category><![CDATA[containers]]></category><category><![CDATA[development]]></category><category><![CDATA[Java]]></category><category><![CDATA[.Net]]></category><category><![CDATA[Python]]></category><dc:creator><![CDATA[Maxim Burgerhout]]></dc:creator><pubDate>Wed, 14 Jun 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Using virt-who with virtual datacenter subscriptions]]></title><description><![CDATA[<div class="paragraph">
<p>At Red Hat, one of the subscription types we offer is the "virtual datacenter subscription", or VDC. A VDC offers our customers a way to run an unlimited amount of RHEL VMs on a supported hypervisor <sup class="footnote">[<a id="_footnoteref_1" class="footnote" href="#_footnote_1" title="View footnote.">1</a>]</sup>. A requirement to run an unlimited amount of VMs on a hypervisor, is that the subscription management tool, Satellite 6 in most cases, knows which VMs run on which hypervisor. That is where the virt-who tool comes in.</p>
</div>
<div class="paragraph">
<p>A bunch of people have been asking me to do a video about setting up virt-who. I guess that is because initially, setting up virt-who was kind of complicated: you needed a dedicated VM to run it on, there were some issues with configuring it correctly, etc.</p>
</div>
<div class="paragraph">
<p>However: we have come a long way since then. Setting up virt-who is actually dead simple these days. We even have a <a href="https://access.redhat.com/labs/virtwhoconfig/">configuration helper</a> page on our customer portal. Just use the wizard on that page, and copy paste the resulting configuration file onto the system you want to run virt-who on.</p>
</div>
<div class="paragraph">
<p>In the video, I do a brief explanation of what virt-who is, how to install it, and how to make it work for you. It does not explain everything, because even now, it&#8217;s already a 10 minute video.</p>
</div>
<div class="paragraph">
<p>In the upcoming few weeks, I&#8217;ll do videos on using activation keys with VDC subs (and other subs), and on how to see whether or not you need to use virt-who with the subs you have. If you have any other topics, especially around virt-who and subscription management, you would like a video on, let me know!</p>
</div>
<div class="paragraph">
<p>So go check out the video! If you enjoy let me know (and if you don&#8217;t let me know what you would have liked to see differently)! Also, please subscribe if you want to get a notification the next time I publish a video, or just want to show a little support :)</p>
</div>
<div class="videoblock">
<div class="content">
<iframe src="https://www.youtube.com/embed/y7F2zR7Yuk4?rel=0" frameborder="0" allowfullscreen></iframe>
</div>
</div>
<div id="footnotes">
<hr>
<div class="footnote" id="_footnote_1">
<a href="#_footnoteref_1">1</a>. Supported virtualization platforms are RHV, vSphere, Hyper-V and libvirt on RHEL
</div>
</div>]]></description><link>http://100things.wzzrd.com/2017/06/08/Using-virt-who-with-virtual-datacenter-subscriptions.html</link><guid isPermaLink="true">http://100things.wzzrd.com/2017/06/08/Using-virt-who-with-virtual-datacenter-subscriptions.html</guid><category><![CDATA[virt-who]]></category><category><![CDATA[vdc]]></category><category><![CDATA[redhat]]></category><category><![CDATA[youtube]]></category><category><![CDATA[satellite6]]></category><dc:creator><![CDATA[Maxim Burgerhout]]></dc:creator><pubDate>Thu, 08 Jun 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Connecting Satellite 6 and Ansible Tower]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>Today I want to talk about connecting Satellite 6 and Ansible Tower. There are two main benefits you can get right now from connecting Satellite 6 and Ansible Tower if you use both.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_sharing_inventory_data">Sharing inventory data</h2>
<div class="sectionbody">
<div class="paragraph">
<p>First of all, if you share inventory data, you share hostnames and IP addresses of systems between Satellite 6 and Ansible Tower. This is valuable by itself, because who wants to keep track of systems in two different places, right? But apart from hostnames and IP addresses, Satellite 6 will offer all other information it has on those systems to Tower as well. This means you get access to what lifecycle environment a system is in, what content view it uses, and many more things.</p>
</div>
<div class="paragraph">
<p>Some of that information is available as variables at the system level, like the amount of outstanding errata and the name of the operating system.</p>
</div>
<div class="paragraph">
<p>Other things are used directly in Tower to group systems by. As an example, your hostgroups in Satellite will directly transfor into groups of systems in Tower as well, and this goes for lifecycle environments, content views and Puppet environments as well. That already should make your life a lot easier :)</p>
</div>
<div class="imageblock">
<div class="content">
<img src="https://raw.githubusercontent.com/wzzrd/hubpress.io/gh-pages/images/imported_system.png" alt="Imported system" width="740" height="265">
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_provisioning_callbacks">Provisioning callbacks</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The second things you can more easily achieve by connecting Ansible Tower to Satellite 6, is the use of <strong>provisioning callbacks</strong>.</p>
</div>
<div class="paragraph">
<p>A provisioning callback is a special URL on the Tower server, that can be called by a client node to invoke a playbook run on itself. In order to successfully trigger a playbook run, a client node has to POST a special variable to the URL.</p>
</div>
<div class="paragraph">
<p>Tower will then refresh the inventory (you need to enable that on the inventory manually, by the way) and execute the Job Template associated with the provisioning callback.</p>
</div>
<div class="sect2">
<h3 id="_some_code_to_help_you_get_started">Some code to help you get started</h3>
<div class="paragraph">
<p>So what you need to do to make this work, is go to your Satellite and edit the provisioning template called "Satellite Kickstart Default". To this template, you add a little snippet near the end (preferably after the Puppet snippet, and before the 'Informing Satellite that we are built' part), that reads as follows:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-erb" data-lang="erb"># This is RHEL7 specific code, as it uses systemctl, replace with
# chkconfig or an @boot cron if you run RHEL5 or RHEL6

&lt;% if @host.params['ansible_enabled'] == 'true' %&gt;
cat &gt; /etc/systemd/system/ansible-callback.service &lt;&lt; EOF
&lt;%= snippet 'ansible_callback_service' %&gt;
EOF

# Runs during first boot, removes itself
/usr/bin/systemctl enable ansible-callback
&lt;% end -%&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Then you create a new provisioning template, call it 'ansible_callback_service', and make it a snippet. Add the following code to it. Update the hostname below to match your environment.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-ini" data-lang="ini">[Unit]
Description=Provisioning callback to Ansible
Wants=network-online.target
After=network-online.target

[Service]
Type=oneshot
ExecStart=/usr/bin/curl -k -s --data "host_config_key=&lt;%= @host.params['ansible_host_config_key'] -%&gt;" https://tower310.deployment6.lan/api/v1/job_templates/&lt;%= @host.params['ansible_job_template_id'] -%&gt;/callback/
ExecStartPost=/usr/bin/systemctl disable ansible-callback

[Install]
WantedBy=multi-user.target</code></pre>
</div>
</div>
<div class="paragraph">
<p>(I prefer to use a snippet for this for some more flexibility.)</p>
</div>
<div class="paragraph">
<p>If you&#8217;ve done the above, you can assign the following variables to hosts or hostgroups:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>ansible_enabled</code>: must be 'true' to enable provisioning callbacks to begin with</p>
</li>
<li>
<p><code>ansible_job_template_id</code>: the ID of the job template associated with the provisioning callback URL</p>
</li>
<li>
<p><code>ansible_host_config_key</code>: the variables that needs to be POSTed to the provisioning callback URL</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Make sure the inventory associated with this job template you are configuring provisioning callbacks for has 'Update on Launch' enabled.</p>
</div>
</div>
<div class="sect2">
<h3 id="_systemd_service_or_boot_cronjob_or_init_script">systemd service, or @boot cronjob, or init script</h3>
<div class="paragraph">
<p>What the above will do is deploy a small systemd service on your new system. During first boot, this service will make systemd run a single cURL command and then disable the service again, so it&#8217;ll only run once at the very first boot.</p>
</div>
<div class="paragraph">
<p>You can also adapt this service to be a @boot cronjob, or traditional initscript as well, of course.</p>
</div>
</div>
<div class="sect2">
<h3 id="_update_here_s_the_video">Update: here&#8217;s the video</h3>
<div class="paragraph">
<p>Duh. Forgot to include that at first :/</p>
</div>
<div class="videoblock">
<div class="content">
<iframe src="https://www.youtube.com/embed/SXhfgJjeaGc?rel=0" frameborder="0" allowfullscreen></iframe>
</div>
</div>
<div class="paragraph">
<p>Happy configuring!</p>
</div>
</div>
</div>
</div>]]></description><link>http://100things.wzzrd.com/2017/03/30/Connecting-Satellite-6-and-Ansible-Tower.html</link><guid isPermaLink="true">http://100things.wzzrd.com/2017/03/30/Connecting-Satellite-6-and-Ansible-Tower.html</guid><category><![CDATA[ansible]]></category><category><![CDATA[ansible tower]]></category><category><![CDATA[satellite6]]></category><category><![CDATA[youtube]]></category><dc:creator><![CDATA[Maxim Burgerhout]]></dc:creator><pubDate>Thu, 30 Mar 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Building a highly available Ansible Tower cluster]]></title><description><![CDATA[<div class="paragraph">
<p>With the release of Ansible Tower 3.1 a short while back, it became possible to setup Ansible Tower in a highly available, active-active topology. You do this by setting up multiple Tower nodes that talk to a shared PostgreSQL database on a separate node. This database can be setup and managed by the Tower installation playbook, or you can manage it yourself.</p>
</div>
<div class="paragraph">
<p>Each of the Tower nodes will serve up the web front end, so your users can choose which Tower server they use to log into. If you change the configuration through the web UI on one node, the change is visible over all instances through the shared database. For example, uploading a Tower license file to one of the Tower instances will make it show up in all of your Tower cluster nodes.</p>
</div>
<div class="paragraph">
<p>Cluster nodes keep in touch with one another for job scheduling and such through RabbitMQ.</p>
</div>
<div class="paragraph">
<p>Sounds good? That&#8217;s because it is! And it gets better: setting up a Tower cluster is insanely easy!</p>
</div>
<div class="paragraph">
<p>As an example, I have set up a Tower cluster on three nodes: tower01.nontoonyt.lan, tower02.nontoonyt.lan and tower03.nontoonyt.lan. The database will reside on towerdb.nontoonyt.lan. By configuring the inventory in a specific - and quite simple - way, the Tower installation playbooks will build the whole cluster for me.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="https://raw.githubusercontent.com/wzzrd/hubpress.io/gh-pages/images/ansible-tower-cluster.png" alt="Tower Cluster Topology" width="460" height="650">
</div>
</div>
<div class="paragraph">
<p>The below snippet is an edited version of the special inventory file we ship in the ansible-tower-setup tarball, called "inventory_cluster".</p>
</div>
<div class="literalblock">
<div class="content">
<pre>[tower]
tower01.nontoonyt.lan
tower02.nontoonyt.lan
tower03.nontoonyt.lan

[database]
towerdb.nontoonyt.lan

[all:vars]
admin_password='myPassw0rd'

pg_host='towerdb.nontoonyt.lan'
pg_port='5432'

pg_database='tower'
pg_username='tower'
pg_password='myPassw0rd'

rabbitmq_port=5672
rabbitmq_vhost=tower
rabbitmq_username=tower
rabbitmq_password='myPassw0rd'
rabbitmq_cookie=omnomnomnom

# Needs to be true for fqdns and ip addresses
rabbitmq_use_long_name=true</pre>
</div>
</div>
<div class="paragraph">
<p>To invoke setup.sh to perform a cluster installation based on that inventory file, you just run:</p>
</div>
<div class="literalblock">
<div class="content">
<pre># ./setup.sh -i inventory_cluster</pre>
</div>
</div>
<div class="paragraph">
<p>That&#8217;s it. Hope you enjoy the new Ansible Tower cluster feature! Take a look at the Youtube screencast that goes with this blog.</p>
</div>
<div class="videoblock">
<div class="content">
<iframe src="https://www.youtube.com/embed/t3VdUjjuv70?rel=0" frameborder="0" allowfullscreen></iframe>
</div>
</div>]]></description><link>http://100things.wzzrd.com/2017/03/13/Building-a-highly-available-Ansible-Tower-cluster.html</link><guid isPermaLink="true">http://100things.wzzrd.com/2017/03/13/Building-a-highly-available-Ansible-Tower-cluster.html</guid><category><![CDATA[ansible]]></category><category><![CDATA[ansible tower]]></category><category><![CDATA[ansible tower cluster]]></category><category><![CDATA[youtube]]></category><dc:creator><![CDATA[Maxim Burgerhout]]></dc:creator><pubDate>Mon, 13 Mar 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Using a dedicated Puppet content view]]></title><description><![CDATA[<div class="paragraph">
<p>After I <a href="https://www.youtube.com/watch?v=04m6SlvzvKY&amp;list=PLTJ5vj7osiGMHEi9SQvoyXD2vNL_v8WFv">presented at Summit</a> last Summer, I starting getting frequent questions around how to setup a dedicated Puppet content view in Satellite 6.</p>
</div>
<div class="paragraph">
<p>Using a dedicated Puppet content view can be useful for your organization if you are doing intensive development on your Puppet code base. This usually applies to organizations that are just getting started implementing Puppet: you are making many changes to the Puppet code base all the time, and if you stick those modules in a CV with 35,000 RPMs in there as well, publishing a new version will take more time than  you probably want to spend waiting. (Apologies for the long sentence there.)</p>
</div>
<div class="imageblock">
<div class="content">
<img src="https://raw.githubusercontent.com/wzzrd/hubpress.io/gh-pages/images/pupcvs.png" alt="a Puppet CV created" width="480" height="270">
</div>
</div>
<div class="paragraph">
<p>If you split out your Puppet modules into a dedicated content view, you get quick publishing and promotion of that content view, speeding up the pace of making changes to your Puppet code base.</p>
</div>
<div class="paragraph">
<p>The downside is, that you are breaking the bond between RPMs and Puppet content views. This means that you can no longer be sure that a specific version of a content view with RPMs is tested with a certain set of Puppet modules. How important that is for your infrastructure, I cannot assess, but I have learned it varies from customer to customer.</p>
</div>
<div class="paragraph">
<p>Anyway, I created another screencast to explain the concept of a dedicated Puppet content view, uploaded it to Youtube and I hope you enjoy.</p>
</div>
<div class="paragraph">
<p>Please make sure you subscribe to the channel and leave comments and / or like the video. Your feedback is important to me and makes it clear whether or not I&#8217;m helping people by making these videos.</p>
</div>
<div class="paragraph">
<p>Next time around, I&#8217;ll start introducing other Red Hat management products, starting with Ansible Tower.</p>
</div>
<div class="paragraph">
<p>Until then! Cheers!</p>
</div>
<div class="videoblock">
<div class="content">
<iframe src="https://www.youtube.com/embed/Y6xDU-WMFFY?rel=0" frameborder="0" allowfullscreen></iframe>
</div>
</div>]]></description><link>http://100things.wzzrd.com/2017/03/08/How-to-use-a-dedicated-Puppet-content-view-in-Satellite-6.html</link><guid isPermaLink="true">http://100things.wzzrd.com/2017/03/08/How-to-use-a-dedicated-Puppet-content-view-in-Satellite-6.html</guid><category><![CDATA[youtube]]></category><category><![CDATA[satellite6]]></category><category><![CDATA[content views]]></category><category><![CDATA[puppet]]></category><dc:creator><![CDATA[Maxim Burgerhout]]></dc:creator><pubDate>Wed, 08 Mar 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Content views and composite content views]]></title><description><![CDATA[<div class="imageblock">
<div class="content">
<img src="https://raw.githubusercontent.com/wzzrd/hubpress.io/gh-pages/images/boxes.png" alt="Whiteboarding" width="480" height="270">
</div>
</div>
<div class="paragraph">
<p>We have been talking about content views in the previous posts, but to be sure we are all on the same page: a content view is a versioned, filtered set of repositories that you can promote between lifecycle environments. We have been talking about 'normal' content views, or CV, up until now, but Satellite 6 also knows the concept of a <em>composite content view</em>, or CCV.</p>
</div>
<div class="paragraph">
<p>A composite content view allows you to bundle other content views, rather than individual repositories. The best approach to this is to start creating re-usable building blocks (component content views) to bundle in CCVs. You could, for example, create a building block for the base operating system, and combine that with different application content views into composite content views.</p>
</div>
<div class="paragraph">
<p>You might want to do this if your application content views follow different lifecycle paths, or move slower (or faster) than your base operating system content view through the same lifecycle path.</p>
</div>
<div class="paragraph">
<p>Another use case would be if the application content view is maintained by a different department. By using composite content views in that case, the team of application administrators or developers can manage the application content view, and the Linux administrator team can manage the base operating system content view. Every once in a while - depending on requirements - the two component CVs are bundled together into a CCV, and then published and promoted.</p>
</div>
<div class="paragraph">
<p>You then use activation keys to register new systems to the CCV and use the provisions in that activation key to grant access to specific repositories in the CCV. (This will be the topic of a later video.)</p>
</div>
<div class="paragraph">
<p>I created this episode because people often ask what the difference is between CVs and CCVs, and if they should always use CCVs. I want to be clear about that last question. The answer to it is a distinct <em>no</em>. Do <em>not</em> use CCVs just because you can. <em>Do</em> use CCVs because you are trying to solve one of the use cases mentioned above, or one of the use cases mentioned in the <a href="https://access.redhat.com/articles/1585273">10 Steps to Build an SOE with Satellite 6</a> document. For those cases, CCVs are perfect :)</p>
</div>
<div class="paragraph">
<p>Hope you enjoy the video! Please subscribe and leave any comments here, or on YouTube, whichever you prefer!</p>
</div>
<div class="paragraph">
<p>Until next time!</p>
</div>
<div class="videoblock">
<div class="content">
<iframe src="https://www.youtube.com/embed/BJjAWME1TlQ?rel=0" frameborder="0" allowfullscreen></iframe>
</div>
</div>]]></description><link>http://100things.wzzrd.com/2017/02/15/Content-views-and-composite-content-views.html</link><guid isPermaLink="true">http://100things.wzzrd.com/2017/02/15/Content-views-and-composite-content-views.html</guid><category><![CDATA[satellite6]]></category><category><![CDATA[content views]]></category><category><![CDATA[youtube]]></category><dc:creator><![CDATA[Maxim Burgerhout]]></dc:creator><pubDate>Wed, 15 Feb 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[New video: Updating your Satellite 6 system]]></title><description><![CDATA[<div class="paragraph">
<p>The other day, I was talking to a customer about Satellite updates regarding the recently released <a href="https://access.redhat.com/blogs/1169563/posts/2890071">Satellite 6.2.7 update</a>. He and his co-workers were a little anxious about updating their Satellite server, as it is a quite vital piece of their infrastructure.</p>
</div>
<div class="paragraph">
<p>I explained the simple upgrade procedure and as they ran through it, they quickly saw that everything went smoothly. Within a couple of minutes they were running on a new versin of Satellite! :)</p>
</div>
<div class="paragraph">
<p>It then occured to me though, that it would make sense to pause the video series about content views for a bit. Instead of a content view video, I&#8217;m doing an extra video on the simple steps of safely and correctly updating a Satellite server.</p>
</div>
<div class="paragraph">
<p>This is a really short one - as I hope to have more - that walks you quickly through the steps of updating a Satellite 6 system:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>identifying that there is an update outstanding (always read the documentation about released updates!)</p>
</li>
<li>
<p>installing the updated packages</p>
</li>
<li>
<p>making sure any database migrations and mandatory configuration file changes are applied</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>The video below will take you through these steps and make sure you are prepared for your next Satellite 6 update! :) Please subscribe to the Youtube channel to be informed of future videos!</p>
</div>]]></description><link>http://100things.wzzrd.com/2017/01/31/New-video-Updating-your-Satellite-6-system.html</link><guid isPermaLink="true">http://100things.wzzrd.com/2017/01/31/New-video-Updating-your-Satellite-6-system.html</guid><category><![CDATA[youtube]]></category><category><![CDATA[satellite6]]></category><category><![CDATA[updates]]></category><dc:creator><![CDATA[Maxim Burgerhout]]></dc:creator><pubDate>Tue, 31 Jan 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Introducing a new blog!]]></title><description><![CDATA[<div class="paragraph">
<p>With my recently launched Youtube channel - 100 things to do with Red Hat Management products - I felt that it would be useful to have a blog. A place where I could announce new videos, add some additional explanation to those videos, link to extra content, etc.</p>
</div>
<div class="paragraph">
<p>To be honest, I&#8217;m not completely sure that I&#8217;ve found what I&#8217;m looking for with this Hubpress.io thingy, but it looks good enough for now.</p>
</div>]]></description><link>http://100things.wzzrd.com/2017/01/30/Introducing-a-new-blog.html</link><guid isPermaLink="true">http://100things.wzzrd.com/2017/01/30/Introducing-a-new-blog.html</guid><category><![CDATA[Intro]]></category><dc:creator><![CDATA[Maxim Burgerhout]]></dc:creator><pubDate>Mon, 30 Jan 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Advanced content filtering with Satellite 6]]></title><description><![CDATA[<div class="paragraph">
<p>Today&#8217;s video is about advanced content filtering in Satellite 6. As you probably know, Satellite 6 allows you to filter any repositories it serves out to your clients. These filtered repositories we call 'content views'. If you are unfamiliar with that, I suggest you go take a look at <a href="https://www.youtube.com/watch?v=pQp4LqBpaKg">last week&#8217;s video</a>, that introduces content views and some related concepts.</p>
</div>
<div class="paragraph">
<p>If you are ready for a deeper dive into content filtering, then this week&#8217;s video is exactly right for you! As a short preview, this week, I&#8217;m talking about:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>the difference between include and exclude filters,</p>
</li>
<li>
<p>in what cases it makes sense to combine include and exclude filters,</p>
</li>
<li>
<p>in what cases it does not,</p>
</li>
<li>
<p>filtering errata vs. filtering packages</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Ready? Jump in (and subscribe!) by <a href="https://www.youtube.com/watch?v=p-t4WNctFyI">clicking right here</a>:, or watch inline below:</p>
</div>
<div class="videoblock">
<div class="content">
<iframe src="https://www.youtube.com/embed/p-t4WNctFyI?rel=0" frameborder="0" allowfullscreen></iframe>
</div>
</div>]]></description><link>http://100things.wzzrd.com/2017/01/30/Advanced-content-filtering-with-Satellite-6.html</link><guid isPermaLink="true">http://100things.wzzrd.com/2017/01/30/Advanced-content-filtering-with-Satellite-6.html</guid><category><![CDATA[youtube]]></category><category><![CDATA[satellite6]]></category><category><![CDATA[content-views]]></category><dc:creator><![CDATA[Maxim Burgerhout]]></dc:creator><pubDate>Mon, 30 Jan 2017 00:00:00 GMT</pubDate></item></channel></rss>